rm -rf /usr/local/etc/xray/*.json
rm -rf /usr/local/etc/xray/vless.json
cat <<'XRAY' > /usr/local/etc/xray/vless.json
{
"log": {
    "access": "/var/log/xray/access2.log",
    "error": "/var/log/xray/error.log",
    "loglevel": "info"
    },
    "inbounds": [
        {
            "port": 443,
            "protocol": "vless",
            "settings": {
                "clients": [
                    {
                        "id": "29095140-a813-44c2-b7a9-9aca211597e4",
                        "flow": "xtls-rprx-vision"
                    }
                ],
                "decryption": "none",
                "fallbacks": [
                    {
                        "dest": 80
                    },
                    {
                        "path": "/vless-tls",
                        "dest": 1234,
                        "xver": 1
                    }
                ]
            },
            "streamSettings": {
                "network": "tcp",
                "security": "tls",
                "tlsSettings": {
                    "alpn": [
                        "http/1.1"
                    ],
                    "certificates": [
                        {
                            "certificateFile": "/usr/local/etc/xray/xray.crt",
                            "keyFile": "/usr/local/etc/xray/xray.key"
                        }
                    ]
                }
            }
        },
        {
            "port": 1234,
            "listen": "127.0.0.1",
            "protocol": "vless",
            "settings": {
                "clients": [
                    {
                        "id": "29095140-a813-44c2-b7a9-9aca211597e4",
                        "level": 0,
                        "email": ""
#tls
                    }
                ],
                "decryption": "none"
            },
            "streamSettings": {
                "network": "ws",
                "security": "none",
                "wsSettings": {
                    "acceptProxyProtocol": true,
                    "path": "/vless-tls"
	              },
		        "quicSettings": {},
		        "sockopt": {
		          "mark": 0,
		          "tcpFastOpen": true
		        }
		      },
		      "sniffing": {
		        "enabled": true,
		        "destOverride": [
		          "http",
		          "tls"
		        ]
		      }
		    }
		  ],
		  "outbounds": [
		    {
		      "protocol": "freedom",
		      "settings": {}
		    },
		    {
		      "protocol": "blackhole",
		      "settings": {},
		      "tag": "blocked"
		    },
		    {
            "tag": "warp",
			"protocol": "wireguard",
			"settings": {
				"secretKey": "GAl2z55U2UzNU5FG+LW3kowK+BA/WGMi1dWYwx20pWk=",
				"address": [
					"172.16.0.2/32",
					"2606:4700:110:8f0a:fcdb:db2f:3b3:4d49/128"
				],
				"peers": [
					{
						"publicKey": "bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=",
						"endpoint": "engage.cloudflareclient.com:2408"
                    }
                ]
            }
        },
        {
            "tag":"WARP-socks5-v6",
            "protocol":"freedom",
            "settings":{
                "domainStrategy":"UseIPv6"
            },
            "proxySettings":{
                "tag":"warp"
            }
        }
    ],
    "routing":{
        "rules":[
            {
                "type":"field",
                "domain":[
                    "astro.com.my",
                    "cloudfront.net",
                    "netflix.com",
                    "ip.gs"
                ],
                "outboundTag": "WARP-socks5-v6"
			},
			{
				"type": "field",
		        "ip": [
		          "0.0.0.0/8",
		          "10.0.0.0/8",
		          "100.64.0.0/10",
		          "169.254.0.0/16",
		          "172.16.0.0/12",
		          "192.0.0.0/24",
		          "192.0.2.0/24",
		          "192.168.0.0/16",
		          "198.18.0.0/15",
		          "198.51.100.0/24",
		          "203.0.113.0/24",
		          "::1/128",
		          "fc00::/7",
		          "fe80::/10"
		        ],
		        "outboundTag": "blocked"
            }
        ]
    }
}
XRAY
systemctl restart xray@vless
systemctl status xray@vless
